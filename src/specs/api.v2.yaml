openapi: 3.0.0
info:
  title: API
  version: 2.0.0
  description: The main Node.js pipeline API.
  license:
    name: MIT
    url: "https://github.com/hms-dbmi-cellenics/api/blob/master/LICENSE"
  contact:
    name: Cellenics
servers:
  - url: /v2
tags:
  - name: experiments
    description: Manage your experiments and experiment details.
  - name: heartbeat
    description: API health checks.
  - name: work
    description: Submitting and receiving work.
  - name: processing-config
    description: Structure for configuration of processing steps.
paths:
  /health:
    get:
      tags:
        - heartbeat
      summary: API health check
      operationId: checkHealth
      x-eov-operation-id: health#check
      x-eov-operation-handler: routes/health
      responses:
        "200":
          description: API is available.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    pattern: up
                  env:
                    type: string
                    enum:
                      - development
                      - test
                      - staging
                      - production
                  clusterEnv:
                    type: string
                    enum:
                      - development
                      - test
                      - staging
                      - production
                required:
                  - status
                  - env
                  - clusterEnv
      description: Returns a status on the health of the API.
  "/experiments/{experimentId}/cellSets":
    parameters:
      - name: experimentId
        in: path
        description: ID of experiment to find cell sets of.
        required: true
        schema:
          type: string
    get:
      tags:
        - experiments
      summary: Get cell sets for experiment
      description: Returns a hirearchical view of cell sets in the experiment.
      operationId: getExperimentCellSets
      x-eov-operation-id: cellSets#getCellSets
      x-eov-operation-handler: routes/cellSets
      responses:
        "200":
          description: "Request successful, hierarchy returned below."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CellSets"
        "401":
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "403":
          description: The authenticated user is not authorized to view this resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "404":
          description: Experiment not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "424":
          description: Terms not accepted error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
    patch:
      summary: Patch cell sets of an experiment
      description: Performs a partial update on the experiment's cell sets.
      operationId: patchExperimentCellSets
      x-eov-operation-id: cellSets#patchCellSets
      x-eov-operation-handler: routes/cellSets
      responses:
        "200":
          description: Update to object in response successful.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "401":
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "403":
          description: The authenticated user is not authorized to view this resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "424":
          description: Terms not accepted error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
      requestBody:
        content:
          application/boschni-json-merger+json:
            schema:
              oneOf:
                - type: array
                  items: {}
                - type: object
        description: The patch in the format declared by boschni/json-merger. Note the explicit naming of the content subtype (boschni-json-merger+json) which must be used to explicitly acknowledge the format.
  "/experiments/{experimentId}/processingConfig":
    get:
      summary: Get processing configuration for an experiment
      description: Get processing configuration for an experiment
      operationId: getProcessingConfig
      x-eov-operation-id: experiment#getProcessingConfig
      x-eov-operation-handler: routes/experiment
      parameters:
        - name: experimentId
          schema:
            type: string
          in: path
          required: true
          description: ID of the experiment
      responses:
        "200":
          description: get processing configuration for an experiment
          content:
            application/json:
              schema:
                anyOf:
                  - type: object
                    additionalProperties: false
                  - $ref: "#/components/schemas/ProcessingConfig"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "401":
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "403":
          description: Forbidden request for this user.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "404":
          description: Not found error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "424":
          description: Terms not accepted error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
    put:
      summary: Update processing configuration for an experiment
      description: Update processing configuration for an experiment
      operationId: updateProcessingConfig
      x-eov-operation-id: experiment#updateProcessingConfig
      x-eov-operation-handler: routes/experiment
      parameters:
        - name: experimentId
          schema:
            type: string
          in: path
          required: true
          description: ID of the experiment
      responses:
        "200":
          description: Processing configuration for an experiment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPSuccess"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "401":
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "403":
          description: Forbidden request for this user.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "404":
          description: Not found error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "424":
          description: Terms not accepted error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
  /experiments:
    get:
      summary: Get all experiments
      description: Get all experiments that the user can access
      operationId: getAllExperiments
      x-eov-operation-id: experiment#getAllExperiments
      x-eov-operation-handler: routes/experiment
      responses:
        "200":
          description: All experiments that the user can acess
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExperimentsList"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "401":
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "404":
          description: Not found error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "424":
          description: Terms not accepted error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
  /experiments/examples:
    get:
      summary: Get all example experiments
      description: Get all experiments that are for demonstration
      operationId: getExampleExperiments
      x-eov-operation-id: experiment#getExampleExperiments
      x-eov-operation-handler: routes/experiment
      responses:
        "200":
          description: All experiments that the user can acess
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExampleExperimentsList"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "401":
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "404":
          description: Not found error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "424":
          description: Terms not accepted error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
  "/experiments/{experimentId}":
    get:
      summary: Get an experiment
      description: Get an experiment
      operationId: getExperiment
      x-eov-operation-id: experiment#getExperiment
      x-eov-operation-handler: routes/experiment
      parameters:
        - name: experimentId
          schema:
            type: string
          in: path
          required: true
          description: ID of the experiment
      responses:
        "200":
          description: Get experiment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExperimentInfo"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "401":
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "403":
          description: Forbidden request for this user.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "404":
          description: Not found error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "424":
          description: Terms not accepted error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
    post:
      summary: Create experiment
      description: Create a new experiment
      operationId: createExperiment
      x-eov-operation-id: experiment#createExperiment
      x-eov-operation-handler: routes/experiment
      parameters:
        - name: experimentId
          schema:
            type: string
          in: path
          required: true
          description: ID of the experiment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateExperiment"
      responses:
        "200":
          description: Create experiment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPSuccess"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "401":
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "424":
          description: Terms not accepted error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
    patch:
      summary: Patch an experiment
      description: Update some properties in an experiment
      operationId: patchExperiment
      x-eov-operation-id: experiment#patchExperiment
      x-eov-operation-handler: routes/experiment
      parameters:
        - name: experimentId
          schema:
            type: string
          in: path
          required: true
          description: ID of the experiment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchExperiment"
      responses:
        "200":
          description: Create experiment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPSuccess"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "401":
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "403":
          description: Forbidden request for this user.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "404":
          description: Not found error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "424":
          description: Terms not accepted error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
    delete:
      summary: Delete an experiment
      description: Delete an experiment
      operationId: deleteExperiment
      x-eov-operation-id: experiment#deleteExperiment
      x-eov-operation-handler: routes/experiment
      parameters:
        - name: experimentId
          schema:
            type: string
          in: path
          required: true
          description: ID of the experiment
      responses:
        "200":
          description: Get experiment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPSuccess"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "401":
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "403":
          description: Forbidden request for this user.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "404":
          description: Not found error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "424":
          description: Terms not accepted error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
  "/experiments/{experimentId}/backendStatus":
    get:
      summary: Get backend status for an experiment
      description: "Get the status fo qc, gem2s and the worker for an experiment"
      operationId: getBackendStatus
      x-eov-operation-id: experiment#getBackendStatus
      x-eov-operation-handler: routes/experiment
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "401":
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "403":
          description: The authenticated user is not authorized to view this resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "404":
          description: Experiment not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "424":
          description: Terms not accepted error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
    parameters:
      - schema:
          type: string
        name: experimentId
        in: path
        required: true
        description: ID of the experiment
  "/experiments/{experimentId}/samples":
    get:
      summary: Get samples for an experiment
      description: Get samples for an experiment
      operationId: getSamples
      x-eov-operation-id: sample#getSamples
      x-eov-operation-handler: routes/sample
      parameters:
        - name: experimentId
          schema:
            type: string
          in: path
          required: true
          description: ID of the experiment
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSamples"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "401":
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "403":
          description: Forbidden request for this user.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "404":
          description: Not found error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "424":
          description: Terms not accepted error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
    post:
      summary: Create samples
      description: Create samples for an experiment
      operationId: createSamples
      x-eov-operation-id: sample#createSamples
      x-eov-operation-handler: routes/sample
      parameters:
        - name: experimentId
          schema:
            type: string
          in: path
          required: true
          description: ID of the experiment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSamples"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                description: Object of created sample ids by sample name
                type: object
                additionalProperties:
                  type: string

        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "401":
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "403":
          description: Forbidden request for this user.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "404":
          description: Not found error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "424":
          description: Terms not accepted error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
  "/experiments/{experimentId}/samples/{sampleId}":
    patch:
      summary: Patch sample
      description: Patch sample for an experiment
      operationId: patchSample
      x-eov-operation-id: sample#patchSample
      x-eov-operation-handler: routes/sample
      parameters:
        - name: experimentId
          schema:
            type: string
          in: path
          required: true
          description: ID of the experiment
        - name: sampleId
          schema:
            type: string
          in: path
          required: true
          description: ID of the sample
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              additionalProperties: false
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPSuccess"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "401":
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "403":
          description: Forbidden request for this user.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "404":
          description: Not found error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "424":
          description: Terms not accepted error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
    delete:
      summary: Delete sample
      description: Delete sample for an experiment
      operationId: deleteSample
      x-eov-operation-id: sample#deleteSample
      x-eov-operation-handler: routes/sample
      parameters:
        - name: experimentId
          schema:
            type: string
          in: path
          required: true
          description: ID of the experiment
        - name: sampleId
          schema:
            type: string
          in: path
          required: true
          description: ID of the sample
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPSuccess"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "401":
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "403":
          description: Forbidden request for this user.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "404":
          description: Not found error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "424":
          description: Terms not accepted error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
  "/experiments/{experimentId}/samples/position":
    put:
      summary: Update position for a sample
      description: Set a new position for a sample
      operationId: updateSamplePosition
      x-eov-operation-id: experiment#updateSamplePosition
      x-eov-operation-handler: routes/experiment
      parameters:
        - name: experimentId
          schema:
            type: string
          in: path
          required: true
          description: ID of the experiment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPosition:
                  type: integer
                newPosition:
                  type: integer
              required:
                - oldPosition
                - newPosition
              additionalProperties: false
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "401":
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "403":
          description: Forbidden request for this user.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "404":
          description: Not found error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "424":
          description: Terms not accepted error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
  "/experiments/{experimentId}/samples/options":
    put:
      summary: Update options for samples in an experiment
      description: Update options for samples in an experiment
      operationId: updateSamplesOptions
      x-eov-operation-id: samples#updateSamplesOptions
      x-eov-operation-handler: routes/sample
      parameters:
        - name: experimentId
          schema:
            type: string
          in: path
          required: true
          description: ID of the experiment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateSamplesOptions"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPSuccess"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "401":
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "403":
          description: Forbidden request for this user.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "404":
          description: Not found error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "424":
          description: Terms not accepted error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
  ? "/experiments/{experimentId}/samples/{sampleId}/files/{sampleFileType}/downloadUrl"
  : get:
      summary: Get file download url
      description: Get temporary s3 download url for file
      operationId: downloadSampleFileUrl
      x-eov-operation-id: sampleFile#downloadUrl
      x-eov-operation-handler: routes/sampleFile
      parameters:
        - name: experimentId
          schema:
            type: string
          in: path
          required: true
          description: ID of the experiment
        - name: sampleId
          schema:
            type: string
          in: path
          required: true
          description: ID of the sample
        - name: sampleFileType
          schema:
            type: string
          in: path
          required: true
          description: Type of sample file
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "401":
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "403":
          description: The authenticated user is not authorized to view this resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "404":
          description: Experiment not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "424":
          description: Terms not accepted error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
  "/experiments/{experimentId}/metadataTracks":
    patch:
      summary: Update metadata tracks
      operationId: createMetadataFromFile
      x-eov-operation-id: metadataTrack#createMetadataFromFile
      x-eov-operation-handler: routes/metadataTrack
      tags:
        - Metadata Tracks
      parameters:
        - in: path
          name: experimentId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
              example: |-
                sample1 metadata_key_1 metadata_value_1
                sample2 metadata_key_1 metadata_value_2
                sample1 metadata_key_2 metadata_value_3
                sample2 metadata_key_2 metadata_value_4
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPSuccess"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "401":
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "403":
          description: Forbidden request for this user.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "404":
          description: Not found error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
  "/experiments/{experimentId}/metadataTracks/{metadataTrackKey}":
    post:
      summary: Creates a new metadata track
      description: "Creates a new metadata track, no requestBody required"
      operationId: createMetadataTrack
      x-eov-operation-id: metadataTrack#createMetadataTrack
      x-eov-operation-handler: routes/metadataTrack
      parameters:
        - name: experimentId
          schema:
            type: string
          in: path
          required: true
          description: ID of the experiment
        - name: metadataTrackKey
          schema:
            type: string
          in: path
          required: true
          description: Name of the metadata track
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPSuccess"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "401":
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "403":
          description: Forbidden request for this user.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "404":
          description: Not found error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "424":
          description: Terms not accepted error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
    patch:
      summary: Updates a metadata tracks properties
      description: Updates a metadata tracks properties
      operationId: patchMetadataTrack
      x-eov-operation-id: metadataTrack#patchMetadataTrack
      x-eov-operation-handler: routes/metadataTrack
      parameters:
        - name: experimentId
          schema:
            type: string
          in: path
          required: true
          description: ID of the experiment
        - name: metadataTrackKey
          schema:
            type: string
          in: path
          required: true
          description: Name of the metadata track
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
              required:
                - key
              additionalProperties: false
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPSuccess"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "401":
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "403":
          description: Forbidden request for this user.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "404":
          description: Not found error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "424":
          description: Terms not accepted error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
    delete:
      summary: Deletes a metadata track
      description: "Deletes a metadata track, no requestBody required"
      operationId: deleteMetadataTrack
      x-eov-operation-id: metadataTrack#deleteMetadataTrack
      x-eov-operation-handler: routes/metadataTrack
      parameters:
        - name: experimentId
          schema:
            type: string
          in: path
          required: true
          description: ID of the experiment
        - name: metadataTrackKey
          schema:
            type: string
          in: path
          required: true
          description: Name of the metadata track
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPSuccess"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "401":
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "403":
          description: Forbidden request for this user.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "404":
          description: Not found error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "424":
          description: Terms not accepted error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
  ? "/experiments/{experimentId}/samples/{sampleId}/metadataTracks/{metadataTrackKey}"
  : patch:
      summary: Updates the value that a sample has in a metadata track in particular
      description: Updates a sample's metadata tracks value
      operationId: patchSampleInMetadataTrackValue
      x-eov-operation-id: metadataTrack#patchSampleInMetadataTrackValue
      x-eov-operation-handler: routes/metadataTrack
      parameters:
        - name: experimentId
          schema:
            type: string
          in: path
          required: true
          description: ID of the experiment
        - name: sampleId
          schema:
            type: string
          in: path
          required: true
          description: Id of the sample
        - name: metadataTrackKey
          schema:
            type: string
          in: path
          required: true
          description: Name of the metadata track
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  type: string
              required:
                - value
              additionalProperties: false
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPSuccess"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "401":
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "403":
          description: Forbidden request for this user.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "404":
          description: Not found error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "424":
          description: Terms not accepted error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
  "/experiments/{experimentId}/samples/{sampleId}/sampleFiles/{sampleFileType}":
    post:
      summary: Create a new file for a sample
      description: "Set a new file for a sample, returns signed url to upload sample file"
      operationId: createFile
      parameters:
        - name: experimentId
          required: true
          in: path
          description: ID of the experiment.
          schema:
            type: string
        - name: sampleId
          in: path
          description: ID of the sample.
          required: true
          schema:
            type: string
        - name: sampleFileType
          in: path
          description: Type of the file.
          required: true
          schema:
            type: string
      x-eov-operation-id: sampleFile#create
      x-eov-operation-handler: routes/sampleFile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSampleFile"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "401":
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "403":
          description: Forbidden request for this user.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "404":
          description: Not found error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "424":
          description: Terms not accepted error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
    patch:
      summary: Update a sample files property
      description: Update property of a sample file
      operationId: patchFile
      x-eov-operation-id: sampleFile#patch
      x-eov-operation-handler: routes/sampleFile
      parameters:
        - name: experimentId
          required: true
          in: path
          description: ID of the experiment.
          schema:
            type: string
        - name: sampleId
          in: path
          description: ID of the sample.
          required: true
          schema:
            type: string
        - name: sampleFileType
          in: path
          description: Type of the file.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchSampleFile"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPSuccess"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "401":
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "403":
          description: Forbidden request for this user.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "404":
          description: Not found error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "424":
          description: Terms not accepted error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
  /completeMultipartUpload:
    post:
      summary: Complete a multipart upload
      description: Complete a multipart upload of a sample file
      operationId: completeMultipart
      x-eov-operation-id: sampleFile#completeMultipart
      x-eov-operation-handler: routes/sampleFile
      requestBody:
        content:
          application/json:
            schema:
              description: information here
              type: object
              properties:
                sampleFileId:
                  type: string
                uploadId:
                  type: string
                parts:
                  type: array
                  items:
                    type: object   
              additionalProperties: false
              required:
                  - sampleFileId
                  - uploadId
                  - parts
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPSuccess"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "401":
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "403":
          description: Forbidden request for this user.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "404":
          description: Not found error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "424":
          description: Terms not accepted error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
  "/experiments/{experimentId}/clone":
    post:
      summary: Clone an experiment
      description: "Clone an experiment, returns the id of the new experiment"
      operationId: cloneExperiment
      x-eov-operation-id: experiment#clone
      x-eov-operation-handler: routes/experiment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                toUserId:
                  type: string
              additionalProperties: false
      responses:
        "200":
          description: Returns the id of the new cloned experiment
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "401":
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "403":
          description: Forbidden request for this user.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "404":
          description: Not found error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "423":
          description: A qc or gem2s pipeline running error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "424":
          description: Terms not accepted error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
  "/access/{experimentId}":
    get:
      summary: Get the users with access to an experiment
      operationId: getAccess
      x-eov-operation-id: access#getExperimentUsers
      x-eov-operation-handler: routes/access
      description: Returns the users with access to the experiment
      parameters:
        - name: experimentId
          required: true
          in: path
          description: ID of the experiment.
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                description: Array of experiment users
                type: array
                properties:
                  name:
                    type: string
                  email:
                    type: string
                  role:
                    type: string
                required:
                  - name
                  - email
                  - role
        "404":
          description: Experiment not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
    put:
      summary: Add user to an experiment
      operationId: inviteUser
      x-eov-operation-id: access#inviteUser
      x-eov-operation-handler: routes/access
      description: Adds permissions for the user email for the experiment from the body
      parameters:
        - name: experimentId
          required: true
          in: path
          description: ID of the experiment.
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPSuccess"
        "401":
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "403":
          description: The authenticated user does not have permissions to add users to this resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userEmail:
                  type: string
                role:
                  type: string
              required:
                - userEmail
                - role
    delete:
      summary: Revoke access to users
      operationId: deleteAccess
      x-eov-operation-id: access#revokeAccess
      x-eov-operation-handler: routes/access
      parameters:
        - name: experimentId
          required: true
          in: path
          description: ID of the experiment.
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPSuccess"
        "401":
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "403":
          description: The user does not have permissions to revoke the role.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "404":
          description: Role not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
      description: Delete a role for a user in experiment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userEmail:
                  type: string
                  minLength: 1
              required:
                - userEmail
        description: email of the user to remove from experiment
  /access/post-registration:
    post:
      summary: Endpoint for handling post-registration
      description: Endpoint for handling post-registartion.
      operationId: postRegistration
      x-eov-operation-id: access#postRegistration
      x-eov-operation-handler: routes/access
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPSuccess"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
      requestBody:
        content:
          text/plain:
            schema:
              type: string
            examples: {}
          application/json:
            schema:
              type: object
              properties:
                userEmail:
                  type: string
                  minLength: 1
                userId:
                  type: string
                  minLength: 1
  /access/{experimentId}/check:
    get:
      summary: Check whether user has access to an endpoint
      operationId: isUserAuthorized
      x-eov-operation-id: access#isUserAuthorized
      x-eov-operation-handler: routes/access
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
      parameters:
        - name: experimentId
          description: Id of the experiment
          schema:
            type: string
          in: path
          required: true
        - name: url
          description: Url of the endpoint to check
          schema:
            type: string
          in: query
          required: true
        - name: method
          description: Method of the endpoint to check
          schema:
            type: string
          in: query
          required: true
  "/workResults/{experimentId}/{ETag}":
    get:
      summary: Get the work results from S3
      operationId: getWorkResults
      x-eov-operation-id: work#getResults
      x-eov-operation-handler: routes/work
      description: "On success, returns a signed url with the uploaded worker results in S3"
      parameters:
        - name: experimentId
          description: Id of the experiment
          schema:
            type: string
          in: path
          required: true
        - name: ETag
          description: ETag of the work result object
          schema:
            type: string
          in: path
          required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  signedUrl:
                    type: string
        "401":
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "403":
          description: The user does not have permissions to view the work results.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "404":
          description: The work results were not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
  "/experiments/{experimentId}/gem2s":
    post:
      summary: Run gem2s
      operationId: runGem2s
      x-eov-operation-id: gem2s#run
      x-eov-operation-handler: routes/gem2s
      description: Triggers a new gem2s run
      parameters:
        - name: experimentId
          description: Id of the experiment
          schema:
            type: string
          in: path
          required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPSuccess"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "401":
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "403":
          description: The authenticated user is not authorized to view this resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "404":
          description: Experiment not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "405":
          description: Method not allowed for experiment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
  "/experiments/{experimentId}/seurat":
    post:
      summary: Run seurat
      operationId: runSeurat
      x-eov-operation-id: seurat#run
      x-eov-operation-handler: routes/seurat
      description: Triggers a new seurat run
      parameters:
        - name: experimentId
          description: Id of the experiment
          schema:
            type: string
          in: path
          required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPSuccess"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "401":
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "403":
          description: The authenticated user is not authorized to view this resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "404":
          description: Experiment not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"

  "/experiments/{experimentId}/plots/{plotUuid}":
    parameters:
      - schema:
          type: string
        name: plotUuid
        in: path
        required: true
      - schema:
          type: string
        name: experimentId
        in: path
        required: true
    get:
      summary: Get a plot or table config
      operationId: getPlotTable
      x-eov-operation-id: plots#get
      x-eov-operation-handler: routes/plots
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlotConfig"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "401":
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "403":
          description: The authenticated user is not authorized to view this resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "404":
          description: Experiment/plot not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
      description: Reads a plot and table for a given experiment with the data specified.
    put:
      summary: Update a plot or table config
      operationId: updatePlotTable
      x-eov-operation-id: plots#update
      x-eov-operation-handler: routes/plots
      responses:
        "200":
          description: Update to object in response successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPSuccess"
        "201":
          description: New resource created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPSuccess"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "401":
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "403":
          description: The authenticated user is not authorized to view this resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "404":
          description: Invalid experiment ID specified.
      description: Updates a plot and table for a given experiment with the data specified.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlotConfig"
        description: The new configuration to update the old one by.
  "/experiments/{experimentId}/qc":
    parameters:
      - schema:
          type: string
        name: experimentId
        in: path
        required: true
    post:
      summary: Run qc
      description: Triggers a new qc run
      operationId: runQC
      x-eov-operation-id: qc#run
      x-eov-operation-handler: routes/qc
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPSuccess"
        "401":
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "403":
          description: The authenticated user is not authorized to view this resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "404":
          description: Experiment not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
  "/experiments/{experimentId}/subset":
    post:
      summary: Subset experiment
      description: Create a new experiment from a subset of the experiment in path
      operationId: subsetExperiment
      x-eov-operation-id: subset#run
      x-eov-operation-handler: routes/subset
      parameters:
        - name: experimentId
          schema:
            type: string
          in: path
          required: true
          description: ID of the experiment
      requestBody:
        description: "The parameters for subsetting the experiment"
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                cellSetKeys:
                  type: array
                  items:
                    type: string
              required:
                - name
                - cellSetKeys
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "401":
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "403":
          description: Forbidden request for this user.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "404":
          description: Not found error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"

  /gem2sResults:
    post:
      summary: Retrieve results from pipeline step functions
      description: |-
        Results from Step Function pipeline steps are relayed to the API through this endpoint.
        Note that this endpoint is only exposed to AWS SNS, and since it has a specific communication protocol with limited feedback, the schema defined here is designed to be liberally enforceable. This endpoint is also used by SNS to handle subscribe/unsubscribe events.
        The actual JSON passed by SNS is found in the `PipelineResponse` model, which is to be validated by the API.
      operationId: receiveGem2sResponse
      x-eov-operation-id: gem2s#response
      x-eov-operation-handler: routes/gem2s
      requestBody:
        description: "The results from the execution of a pipeline step, sent via SNS."
        required: true
        content:
          text/plain:
            schema:
              type: string
          application/json:
            schema:
              type: object
              properties: {}
      responses:
        "200":
          description: "A JSON-parseable was received by the server, *irrespective of whether it was correct/acceptable or not*."
          content:
            text/plain:
              schema:
                type: string
                pattern: ok
        "500":
          description: The data sent by the server could not be parsed as JSON.
          content:
            text/plain:
              schema:
                type: string
                pattern: nok
    parameters: []
  /seuratResults:
    post:
      summary: Retrieve results from pipeline step functions
      description: |-
        Results from Step Function pipeline steps are relayed to the API through this endpoint.
        Note that this endpoint is only exposed to AWS SNS, and since it has a specific communication protocol with limited feedback, the schema defined here is designed to be liberally enforceable. This endpoint is also used by SNS to handle subscribe/unsubscribe events.
        The actual JSON passed by SNS is found in the `PipelineResponse` model, which is to be validated by the API.
      operationId: receiveSeuratResponse
      x-eov-operation-id: seurat#response
      x-eov-operation-handler: routes/seurat
      requestBody:
        description: "The results from the execution of a pipeline step, sent via SNS."
        required: true
        content:
          text/plain:
            schema:
              type: string
          application/json:
            schema:
              type: object
              properties: {}
      responses:
        "200":
          description: "A JSON-parseable was received by the server, *irrespective of whether it was correct/acceptable or not*."
          content:
            text/plain:
              schema:
                type: string
                pattern: ok
        "500":
          description: The data sent by the server could not be parsed as JSON.
          content:
            text/plain:
              schema:
                type: string
                pattern: nok
    parameters: []
    
  /pipelineResults:
    post:
      summary: "Placeholder endpoint for qc, necessary so subscriptions to sns work"
      description: "Placeholder endpoint for qc, necessary so subscriptions to sns work"
      operationId: receiveQCResponse
      x-eov-operation-id: qc#response
      x-eov-operation-handler: routes/qc
      requestBody:
        description: "The results from the execution of a pipeline step, sent via SNS."
        required: true
        content:
          text/plain:
            schema:
              type: string
          application/json:
            schema:
              type: object
              properties: {}
      responses:
        "200":
          description: "A JSON-parseable was received by the server, *irrespective of whether it was correct/acceptable or not*."
          content:
            text/plain:
              schema:
                type: string
                pattern: ok
        "500":
          description: The data sent by the server could not be parsed as JSON.
          content:
            text/plain:
              schema:
                type: string
                pattern: nok

  "/experiments/{experimentId}/download/{type}":
    get:
      summary: Download data according to the requested type
      description: Download data according to the requested type
      operationId: downloadExperimentData
      x-eov-operation-id: experiment#downloadData
      x-eov-operation-handler: routes/experiment
      parameters:
        - name: experimentId
          description: Id of the experiment
          schema:
            type: string
          in: path
          required: true
        - name: type
          description: Type of file to download
          schema:
            type: string
          in: path
          required: true
      responses:
        "200":
          description: Download request successful.
          content:
            application/json:
              schema:
                type: string
                description: signed URL of the resource
        "400":
          description: Invalid download type request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "401":
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "403":
          description: The authenticated user is not authorized to view this resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
        "404":
          description: Invalid experiment ID or download type specified
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
  /kubernetesEvents:
    post:
      summary: Monitoring of kubernetes cluster events
      description: Events from Kubernetes Event Exporter relayed to the API.
      operationId: receiveKubernetesEvent
      x-eov-operation-id: kubernetes#event
      x-eov-operation-handler: routes/kubernetes
      responses:
        "200":
          description: "A JSON-parseable was received by the server, *irrespective of whether it was correct/acceptable or not*."
          content:
            text/plain:
              schema:
                type: string
                pattern: ok
        "500":
          description: The data sent by the server could not be parsed as JSON.
          content:
            text/plain:
              schema:
                type: string
                pattern: nok
  /programmaticInterfaceClient:
    get:
      summary: Retrieve the Cognito app client info for the programmatic interface
      description: Returns the information required to connect to the programmatic interface cognito client.
      operationId: getProgrammaticInterfaceClient
      x-eov-operation-id: programmaticInterface#getClient
      x-eov-operation-handler: routes/programmaticInterface
      responses:
        "200":
          description: The server successfully retrieved the programmatic client ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  clientId:
                    type: string
                  clientRegion:
                    type: string
                required:
                  - clientId
                  - clientRegion
        "500":
          description: The server did not manage to retrieve the programmatic client ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
components:
  schemas:
    CreateExperiment:
      $ref: ./models/experiment-bodies/CreateExperiment.v2.yaml
    ExperimentInfo:
      $ref: ./models/experiment-bodies/ExperimentInfo.v2.yaml
    PatchExperiment:
      $ref: ./models/experiment-bodies/PatchExperiment.v2.yaml
    ProcessingConfig:
      $ref: ./models/experiment-bodies/ProcessingConfig.v2.yaml
    ExperimentsList:
      $ref: ./models/experiment-bodies/ExperimentsList.v2.yaml
    ExampleExperimentsList:
      $ref: ./models/experiment-bodies/ExampleExperimentsList.v2.yaml
    CreateSamples:
      $ref: ./models/samples-bodies/CreateSamples.v2.yaml
    GetSamples:
      items:
        $ref: ./models/samples-bodies/Sample.v2.yaml
    CreateSampleFile:
      $ref: ./models/samples-bodies/CreateSampleFile.v2.yaml
    PatchSampleFile:
      $ref: ./models/samples-bodies/PatchSampleFile.v2.yaml
    UpdateSamplesOptions:
      $ref: ./models/samples-bodies/UpdateSamplesOptions.v2.yaml
    CellSets:
      $ref: ./models/cell-sets-bodies/CellSets.v2.yaml
    PlotConfig:
      $ref: ./models/plots-bodies/PlotConfig.v2.yaml
    HTTPSuccess:
      $ref: ./models/HTTPSuccess.v2.yaml
    HTTPError:
      $ref: ./models/HTTPError.v2.yaml
