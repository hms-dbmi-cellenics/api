openapi: 3.0.0
info:
  title: API
  version: 1.0.0
  description: The main Node.js pipeline API.
  license:
    name: MIT
    url: 'https://github.com/biomage-ltd/api/blob/master/LICENSE'
  contact:
    name: Biomage Ltd.
servers:
  - url: /v1
tags:
  - name: experiments
    description: Manage your experiments and experiment details.
  - name: heartbeat
    description: API health checks.
  - name: work
    description: Submitting and receiving work.
  - name: processing-config
    description: Structure for configuration of processing steps.
paths:
  /health:
    get:
      tags:
        - heartbeat
      summary: API health check
      operationId: checkHealth
      x-eov-operation-id: 'health#check'
      x-eov-operation-handler: routes/health
      responses:
        '200':
          description: API is available.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    pattern: up
                  env:
                    type: string
                    enum:
                      - development
                      - test
                      - staging
                      - production
                  clusterEnv:
                    type: string
                    enum:
                      - development
                      - test
                      - staging
                      - production
                required:
                  - status
                  - env
                  - clusterEnv
      description: Returns a status on the health of the API.
  /workResults:
    post:
      operationId: receiveWork
      x-eov-operation-id: 'work#response'
      x-eov-operation-handler: routes/work
      requestBody:
        description: 'The results from the execution of a work request, sent via SNS.'
        required: true
        content:
          text/plain:
            schema:
              type: string
            examples: {}
          application/json:
            schema:
              type: object
              properties: {}
            examples: {}
      responses:
        '200':
          description: 'A JSON-parseable was received by the server, *irrespective of whether it was correct/acceptable or not*.'
          content:
            text/plain:
              schema:
                type: string
                pattern: ok
        '500':
          description: The data sent by the server could not be parsed as JSON.
          content:
            text/plain:
              schema:
                type: string
                pattern: nok
      description: |-
        Results from work performed by workers are relayed to the API through this endpoint.

        Note that this endpoint is only exposed to AWS SNS, and since it has a specific communication protocol with limited feedback, the schema defined here is designed to be liberally enforceable. This endpoint is also used by SNS to handle subscribe/unsubscribe events.

        The actual JSON passed by SNS is found in the `WorkResponse` model, which is to be validated by the API.
      summary: Retrieve results from worker
      tags:
        - work
    parameters: []
  /gem2sResults:
    post:
      operationId: receiveGem2sResponse
      x-eov-operation-id: 'gem2s#response'
      x-eov-operation-handler: routes/gem2s
      requestBody:
        description: 'The results from the execution of a pipeline step, sent via SNS.'
        required: true
        content:
          text/plain:
            schema:
              type: string
            examples: {}
          application/json:
            schema:
              type: object
              properties: {}
            examples: {}
      responses:
        '200':
          description: 'A JSON-parseable was received by the server, *irrespective of whether it was correct/acceptable or not*.'
          content:
            text/plain:
              schema:
                type: string
                pattern: ok
        '500':
          description: The data sent by the server could not be parsed as JSON.
          content:
            text/plain:
              schema:
                type: string
                pattern: nok
      description: |-
        Results from Step Function pipeline steps are relayed to the API through this endpoint.

        Note that this endpoint is only exposed to AWS SNS, and since it has a specific communication protocol with limited feedback, the schema defined here is designed to be liberally enforceable. This endpoint is also used by SNS to handle subscribe/unsubscribe events.

        The actual JSON passed by SNS is found in the `PipelineResponse` model, which is to be validated by the API.
      summary: Retrieve results from pipeline step functions
      tags:
        - work
    parameters: []
  /pipelineResults:
    post:
      operationId: receivePipelineResponse
      x-eov-operation-id: 'pipelines#response'
      x-eov-operation-handler: routes/pipelines
      requestBody:
        description: 'The results from the execution of a pipeline step, sent via SNS.'
        required: true
        content:
          text/plain:
            schema:
              type: string
            examples: {}
          application/json:
            schema:
              type: object
              properties: {}
            examples: {}
      responses:
        '200':
          description: 'A JSON-parseable was received by the server, *irrespective of whether it was correct/acceptable or not*.'
          content:
            text/plain:
              schema:
                type: string
                pattern: ok
        '500':
          description: The data sent by the server could not be parsed as JSON.
          content:
            text/plain:
              schema:
                type: string
                pattern: nok
      description: |-
        Results from Step Function pipeline steps are relayed to the API through this endpoint.

        Note that this endpoint is only exposed to AWS SNS, and since it has a specific communication protocol with limited feedback, the schema defined here is designed to be liberally enforceable. This endpoint is also used by SNS to handle subscribe/unsubscribe events.

        The actual JSON passed by SNS is found in the `PipelineResponse` model, which is to be validated by the API.
      summary: Retrieve results from pipeline step functions
      tags:
        - work
    parameters: []
  '/experiments/{experimentId}':
    get:
      tags:
        - experiments
      summary: Get experiment details
      description: Returns the main details of the experiment.
      operationId: getExperiment
      x-eov-operation-id: 'experiment#getExperiment'
      x-eov-operation-handler: routes/experiment
      responses:
        '401':
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
        '403':
          description: The authenticated user is not authorized to view this resource.
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
        '200':
          description: 'Fetch successful, response below'
          content:
            application/json:
              schema:
                $ref: ./models/api-body-schemas/Experiment.v1.yaml
        '404':
          description: Experiment not found
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
    parameters:
      - schema:
          type: string
        name: experimentId
        in: path
        required: true
        description: ID of the experiment to find.
    post:
      summary: Create experiment
      operationId: createExperiment
      x-eov-operation-id: experiment#createExperiment
      x-eov-operation-handler: routes/experiment
      responses:
        '200':
          description: Create experiment
          content:
            application/json:
              schema:
                $ref: ./models/HTTPSuccess.v1.yaml
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
        '401':
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
    put:
      summary: ''
      operationId: updateExperiment
      x-eov-operation-id: experiment#updateExperiment
      x-eov-operation-handler: routes/experiment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '401':
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
        '403':
          description: The authenticated user is not authorized to modify this resource.
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
      description: Update experiment
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/api-body-schemas/Experiment.v1.yaml
  '/experiments/{experimentId}/cellSets':
    get:
      tags:
        - experiments
      summary: Get cell sets for experiment
      description: Returns a hirearchical view of cell sets in the experiment.
      operationId: getExperimentCellSetsById
      x-eov-operation-id: 'experiment#getCellSets'
      x-eov-operation-handler: routes/experiment
      responses:
        '200':
          description: 'Request successful, hierarchy returned below.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  cellSets:
                    type: array
                    items:
                      $ref: ./models/api-body-schemas/CellSets.v1.yaml
        '401':
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
        '403':
          description: The authenticated user is not authorized to view this resource.
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
        '404':
          description: Experiment not found.
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
    parameters:
      - name: experimentId
        in: path
        description: ID of experiment to find cell sets of.
        required: true
        schema:
          type: string
    put:
      summary: ''
      operationId: updateExperimentCellSetsById
      x-eov-operation-id: 'experiment#updateCellSets'
      x-eov-operation-handler: routes/experiment
      responses:
        '401':
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
        '403':
          description: The authenticated user is not authorized to view this resource.
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
        '200':
          description: Update to object in response successful.
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: ./models/api-body-schemas/CellSets.v1.yaml
      description: Updates the cell set information in the database with a modified tree.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                allOf:
                  - $ref: ./models/api-body-schemas/CellSets.v1.yaml
      tags:
        - experiments
  '/experiments/{experimentId}/processingConfig':
    get:
      summary: Retrieve processing configuration
      description: Returns a hirearchical view of processing configuration used in the experiment.
      operationId: getExperimentProcessingConfigById
      x-eov-operation-id: 'experiment#getProcessingConfig'
      x-eov-operation-handler: routes/experiment
      responses:
        '401':
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
        '403':
          description: The authenticated user is not authorized to view this resource.
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
        '200':
          description: 'Fetch successful, response below.'
          content:
            application/json:
              schema:
                $ref: ./models/ProcessingConfig.v1.yaml
        '404':
          description: Experiment not found.
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
      tags:
        - processing-config
    parameters:
      - name: experimentId
        in: path
        description: ID of experiment to find cell sets of.
        required: true
        schema:
          type: string
    put:
      summary: ''
      operationId: updateExperimentProcessingConfigById
      x-eov-operation-id: 'experiment#updateProcessingConfig'
      x-eov-operation-handler: routes/experiment
      responses:
        '401':
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
        '403':
          description: The authenticated user is not authorized to view this resource.
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
        '200':
          description: Update to object in response successful.
          content:
            application/json:
              schema:
                $ref: ./models/ProcessingConfig.v1.yaml
              examples: {}
      description: Updates the processing configuration in the database.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: Name of the configuration that wants to be changed
                  body:
                    $ref: ./models/ProcessingConfigBodies.v1.yaml
                required:
                  - name
                  - body
            examples: {}
        description: Updates the keys specified by `name` with the body specified by `body`. A standard DynamoDB UpdateItem request should be called on the update.
      tags:
        - processing-config
  '/experiments/{experimentId}/plots-tables/{plotUuid}':
    parameters:
      - schema:
          type: string
        name: plotUuid
        in: path
        required: true
      - schema:
          type: string
        name: experimentId
        in: path
        required: true
    put:
      summary: ''
      operationId: updatePlotTable
      x-eov-operation-id: 'plots-tables#update'
      x-eov-operation-handler: routes/plots-tables
      responses:
        '401':
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
        '403':
          description: The authenticated user is not authorized to view this resource.
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
        '200':
          description: Update to object in response successful.
          content:
            application/json:
              schema:
                $ref: ./models/api-body-schemas/PlotTableConfig.v1.yaml
        '201':
          description: New resource created.
          content:
            application/json:
              schema:
                $ref: ./models/api-body-schemas/PlotTableConfig.v1.yaml
        '404':
          description: Invalid experiment ID specified.
      description: Updates a plot and table for a given experiment with the data specified.
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/api-body-schemas/PlotTableConfig.v1.yaml
        description: The new configuration to update the old one by.
    get:
      summary: ''
      operationId: getPlotTable
      x-eov-operation-id: 'plots-tables#read'
      x-eov-operation-handler: routes/plots-tables
      responses:
        '401':
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
        '403':
          description: The authenticated user is not authorized to view this resource.
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
        '404':
          description: Experiment/plot not found.
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/api-body-schemas/PlotTableConfig.v1.yaml
      description: Reads a plot and table for a given experiment with the data specified.
    delete:
      summary: ''
      operationId: deletePlotTable
      x-eov-operation-id: 'plots-tables#delete'
      x-eov-operation-handler: routes/plots-tables
      responses:
        '401':
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
        '403':
          description: The authenticated user is not authorized to view this resource.
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
        '200':
          description: OK
      description: Deletes a plot and table for a given experiment with the data specified.
  '/experiments/{experimentId}/gem2s':
    parameters:
      - schema:
          type: string
        name: experimentId
        in: path
        required: true
    post:
      summary: Create a new pipeline for gem2s execution
      operationId: createNewGem2S
      x-eov-operation-id: gem2s#create
      x-eov-operation-handler: routes/gem2s
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
      description: This path will create a new pipeline that can run a state machine with gem2s tasks.
  '/experiments/{experimentId}/pipelines': # this should be changed to /qc at some point
    parameters:
      - schema:
          type: string
        name: experimentId
        in: path
        required: true
    post:
      summary: Create a new pipeline for task execution
      operationId: createNewPipeline
      x-eov-operation-id: 'pipelines#create'
      x-eov-operation-handler: routes/pipelines
      responses:
        '401':
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
        '403':
          description: The authenticated user is not authorized to view this resource.
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
      description: This path will create a new pipeline that can run a state machine with different bioinformatics tasks.
  '/experiments/{experimentId}/backendStatus':
    get:
      summary: Create new pipeline
      operationId: get-experiments-experimentId-pipelines
      x-eov-operation-id: backend-status#get
      x-eov-operation-handler: routes/backend-status
      responses:
        '401':
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
        '403':
          description: The authenticated user is not authorized to view this resource.
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '404':
          description: Experiment not found.
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
  '/experiments/{experimentId}/samples':
    parameters:
      - schema:
          type: string
        name: experimentId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      operationId: getSamplesByExperimentId
      x-eov-operation-id: samples#getSamplesByExperimentId
      x-eov-operation-handler: routes/samples
      tags: []
      responses:
        '401':
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
        '403':
          description: The authenticated user is not authorized to view this resource.
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
        '200':
          description: 'Fetch successful, samples returned below.'
          content:
            application/json:
              schema:
                $ref: ./models/api-body-schemas/Samples.v1.yaml
        '404':
          description: Samples not found.
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
      description: Get all samples for an experiment
  '/projects/{projectUuid}':
    parameters:
      - schema:
          type: string
        name: projectUuid
        in: path
        required: true
    put:
      summary: Update project
      operationId: updateProject
      x-eov-operation-id: projects#update
      x-eov-operation-handler: routes/projects
      responses:
        '200':
          description: Update sample object
          content:
            application/json:
              schema:
                $ref: ./models/HTTPSuccess.v1.yaml
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
        '401':
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
        '403':
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
      description: Update a project
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/api-body-schemas/Project.v1.yaml
        description: The new configuration to update the old one by.
    delete:
      summary: 'Deletes the project'
      operationId: deleteProject
      x-eov-operation-id: projects#delete
      x-eov-operation-handler: routes/projects
      responses:
        '200':
          description: Deletes object
          content:
            application/json:
              schema:
                $ref: ./models/HTTPSuccess.v1.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
      description: Deletes project and associated samples.
  '/projects/{projectUuid}/experiments':
    parameters:
      - name: projectUuid
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get experiments under a project
      operationId: getProjectExperiments
      x-eov-operation-id: projects#getExperiments
      x-eov-operation-handler: routes/projects
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/api-body-schemas/Experiment.v1.yaml
        '401':
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
        '403':
          description: The request lacks authorization credentials.
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
      description: Get all experiments under a project
  '/projects/{projectUuid}/samples':
    parameters:
      - name: projectUuid
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get samples under a project
      description: Get all samples under a project
      operationId: getProjectSamples
      x-eov-operation-id: samples#get
      x-eov-operation-handler: routes/samples
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    experimentId:
                      type: string
                    projectUuid:
                      type: string
                    samples:
                      $ref: ./models/api-body-schemas/Samples.v1.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
  '/projects/{projectUuid}/{experimentId}/samples':
      parameters:
        - name: projectUuid
          in: path
          required: true
          schema:
            type: string
        - name: experimentId
          in: path
          required: true
          schema:
            type: string
      put:
        summary: Update samples
        operationId: updateSamples
        x-eov-operation-id: samples#update
        x-eov-operation-handler: routes/samples
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: ./models/HTTPSuccess.v1.yaml
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: ./models/HTTPError.v1.yaml
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: ./models/HTTPError.v1.yaml
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  $ref: ./models/HTTPError.v1.yaml
        description: Updates a samples entry
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  samples:
                    $ref: ./models/api-body-schemas/Samples.v1.yaml
      delete:
        summary: Remove samples
        operationId: removeSamples
        x-eov-operation-id: samples#remove
        x-eov-operation-handler: routes/samples
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: ./models/HTTPSuccess.v1.yaml
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: ./models/HTTPError.v1.yaml
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: ./models/HTTPError.v1.yaml
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  $ref: ./models/HTTPError.v1.yaml
        description: Removes samples from an entry
        requestBody:
          content:
            application/json:
              schema:
                $ref: ./models/samples-bodies/SamplesRemoveBody.v1.yaml
  '/projects':
    get:
      summary: 'Get the list of projects'
      operationId: getProjects
      x-eov-operation-id: projects#get
      x-eov-operation-handler: routes/projects
      description: Get the projects
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/api-body-schemas/Project.v1.yaml
        '401':
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
