// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`experimentController cloneExperiment works correctly 1`] = `
Array [
  Array [
    "mockToExperimentId",
    Object {
      "processing_config": "{\\"classifier\\":{\\"auto\\":true,\\"enabled\\":false,\\"prefiltered\\":true,\\"filterSettings\\":{\\"FDR\\":0.01},\\"mockClonedSample1\\":{\\"auto\\":true,\\"enabled\\":false,\\"prefiltered\\":true,\\"filterSettings\\":{\\"FDR\\":0.01},\\"defaultFilterSettings\\":{\\"FDR\\":0.01}},\\"mockClonedSample2\\":{\\"auto\\":true,\\"enabled\\":false,\\"prefiltered\\":true,\\"filterSettings\\":{\\"FDR\\":0.01},\\"defaultFilterSettings\\":{\\"FDR\\":0.01}}},\\"doubletScores\\":{\\"auto\\":true,\\"enabled\\":true,\\"filterSettings\\":{\\"binStep\\":0.05,\\"probabilityThreshold\\":0.5},\\"mockClonedSample1\\":{\\"auto\\":true,\\"enabled\\":true,\\"filterSettings\\":{\\"binStep\\":0.05,\\"probabilityThreshold\\":0.4495137},\\"defaultFilterSettings\\":{\\"binStep\\":0.05,\\"probabilityThreshold\\":0.4495137}},\\"mockClonedSample2\\":{\\"auto\\":true,\\"enabled\\":true,\\"filterSettings\\":{\\"binStep\\":0.05,\\"probabilityThreshold\\":0.6213194},\\"defaultFilterSettings\\":{\\"binStep\\":0.05,\\"probabilityThreshold\\":0.6213194}}},\\"dataIntegration\\":{\\"dataIntegration\\":{\\"method\\":\\"harmony\\",\\"methodSettings\\":{\\"fastmnn\\":{\\"numGenes\\":2000,\\"normalisation\\":\\"logNormalize\\"},\\"harmony\\":{\\"numGenes\\":2000,\\"normalisation\\":\\"logNormalize\\"},\\"seuratv4\\":{\\"numGenes\\":2000,\\"normalisation\\":\\"logNormalize\\"},\\"unisample\\":{\\"numGenes\\":2000,\\"normalisation\\":\\"logNormalize\\"}}},\\"dimensionalityReduction\\":{\\"method\\":\\"rpca\\",\\"numPCs\\":30,\\"excludeGeneCategories\\":[]}},\\"numGenesVsNumUmis\\":{\\"enabled\\":true,\\"filterSettings\\":{\\"regressionType\\":\\"gam\\",\\"regressionTypeSettings\\":{\\"gam\\":{\\"p.level\\":0.001}}},\\"mockClonedSample1\\":{\\"auto\\":true,\\"enabled\\":true,\\"filterSettings\\":{\\"regressionType\\":\\"linear\\",\\"regressionTypeSettings\\":{\\"linear\\":{\\"p.level\\":0.0001386194},\\"spline\\":{\\"p.level\\":0.0001386194}}},\\"defaultFilterSettings\\":{\\"regressionType\\":\\"linear\\",\\"regressionTypeSettings\\":{\\"linear\\":{\\"p.level\\":0.0001386194},\\"spline\\":{\\"p.level\\":0.0001386194}}}},\\"mockClonedSample2\\":{\\"auto\\":true,\\"enabled\\":true,\\"filterSettings\\":{\\"regressionType\\":\\"linear\\",\\"regressionTypeSettings\\":{\\"linear\\":{\\"p.level\\":0.0001264702},\\"spline\\":{\\"p.level\\":0.0001264702}}},\\"defaultFilterSettings\\":{\\"regressionType\\":\\"linear\\",\\"regressionTypeSettings\\":{\\"linear\\":{\\"p.level\\":0.0001264702},\\"spline\\":{\\"p.level\\":0.0001264702}}}}},\\"configureEmbedding\\":{\\"embeddingSettings\\":{\\"method\\":\\"umap\\",\\"methodSettings\\":{\\"tsne\\":{\\"perplexity\\":30,\\"learningRate\\":738.75},\\"umap\\":{\\"distanceMetric\\":\\"cosine\\",\\"minimumDistance\\":0.3}}},\\"clusteringSettings\\":{\\"method\\":\\"louvain\\",\\"methodSettings\\":{\\"louvain\\":{\\"resolution\\":0.8}}}},\\"cellSizeDistribution\\":{\\"auto\\":true,\\"enabled\\":false,\\"filterSettings\\":{\\"binStep\\":200,\\"minCellSize\\":1080},\\"mockClonedSample1\\":{\\"auto\\":true,\\"enabled\\":false,\\"filterSettings\\":{\\"binStep\\":200,\\"minCellSize\\":628},\\"defaultFilterSettings\\":{\\"binStep\\":200,\\"minCellSize\\":628}},\\"mockClonedSample2\\":{\\"auto\\":true,\\"enabled\\":false,\\"filterSettings\\":{\\"binStep\\":200,\\"minCellSize\\":630},\\"defaultFilterSettings\\":{\\"binStep\\":200,\\"minCellSize\\":630}}},\\"mitochondrialContent\\":{\\"auto\\":true,\\"enabled\\":true,\\"filterSettings\\":{\\"method\\":\\"absoluteThreshold\\",\\"methodSettings\\":{\\"absoluteThreshold\\":{\\"binStep\\":0.05,\\"maxFraction\\":0.1}}},\\"mockClonedSample1\\":{\\"auto\\":true,\\"enabled\\":true,\\"filterSettings\\":{\\"method\\":\\"absoluteThreshold\\",\\"methodSettings\\":{\\"absoluteThreshold\\":{\\"binStep\\":0.05,\\"maxFraction\\":0.1}}},\\"defaultFilterSettings\\":{\\"method\\":\\"absoluteThreshold\\",\\"methodSettings\\":{\\"absoluteThreshold\\":{\\"binStep\\":0.05,\\"maxFraction\\":0.1}}}},\\"mockClonedSample2\\":{\\"auto\\":true,\\"enabled\\":true,\\"filterSettings\\":{\\"method\\":\\"absoluteThreshold\\",\\"methodSettings\\":{\\"absoluteThreshold\\":{\\"binStep\\":0.05,\\"maxFraction\\":0.1}}},\\"defaultFilterSettings\\":{\\"method\\":\\"absoluteThreshold\\",\\"methodSettings\\":{\\"absoluteThreshold\\":{\\"binStep\\":0.05,\\"maxFraction\\":0.1}}}}}}",
      "samples_order": "[\\"mockClonedSample1\\",\\"mockClonedSample2\\"]",
    },
  ],
]
`;

exports[`experimentController cloneExperiment works correctly when the original experiment never ran gem2s 1`] = `
Array [
  Array [
    "mockToExperimentId",
    Object {
      "processing_config": "{\\"classifier\\":{\\"auto\\":true,\\"enabled\\":false,\\"prefiltered\\":true,\\"filterSettings\\":{\\"FDR\\":0.01},\\"mockClonedSample1\\":{\\"auto\\":true,\\"enabled\\":false,\\"prefiltered\\":true,\\"filterSettings\\":{\\"FDR\\":0.01},\\"defaultFilterSettings\\":{\\"FDR\\":0.01}},\\"mockClonedSample2\\":{\\"auto\\":true,\\"enabled\\":false,\\"prefiltered\\":true,\\"filterSettings\\":{\\"FDR\\":0.01},\\"defaultFilterSettings\\":{\\"FDR\\":0.01}}},\\"doubletScores\\":{\\"auto\\":true,\\"enabled\\":true,\\"filterSettings\\":{\\"binStep\\":0.05,\\"probabilityThreshold\\":0.5},\\"mockClonedSample1\\":{\\"auto\\":true,\\"enabled\\":true,\\"filterSettings\\":{\\"binStep\\":0.05,\\"probabilityThreshold\\":0.4495137},\\"defaultFilterSettings\\":{\\"binStep\\":0.05,\\"probabilityThreshold\\":0.4495137}},\\"mockClonedSample2\\":{\\"auto\\":true,\\"enabled\\":true,\\"filterSettings\\":{\\"binStep\\":0.05,\\"probabilityThreshold\\":0.6213194},\\"defaultFilterSettings\\":{\\"binStep\\":0.05,\\"probabilityThreshold\\":0.6213194}}},\\"dataIntegration\\":{\\"dataIntegration\\":{\\"method\\":\\"harmony\\",\\"methodSettings\\":{\\"fastmnn\\":{\\"numGenes\\":2000,\\"normalisation\\":\\"logNormalize\\"},\\"harmony\\":{\\"numGenes\\":2000,\\"normalisation\\":\\"logNormalize\\"},\\"seuratv4\\":{\\"numGenes\\":2000,\\"normalisation\\":\\"logNormalize\\"},\\"unisample\\":{\\"numGenes\\":2000,\\"normalisation\\":\\"logNormalize\\"}}},\\"dimensionalityReduction\\":{\\"method\\":\\"rpca\\",\\"numPCs\\":30,\\"excludeGeneCategories\\":[]}},\\"numGenesVsNumUmis\\":{\\"enabled\\":true,\\"filterSettings\\":{\\"regressionType\\":\\"gam\\",\\"regressionTypeSettings\\":{\\"gam\\":{\\"p.level\\":0.001}}},\\"mockClonedSample1\\":{\\"auto\\":true,\\"enabled\\":true,\\"filterSettings\\":{\\"regressionType\\":\\"linear\\",\\"regressionTypeSettings\\":{\\"linear\\":{\\"p.level\\":0.0001386194},\\"spline\\":{\\"p.level\\":0.0001386194}}},\\"defaultFilterSettings\\":{\\"regressionType\\":\\"linear\\",\\"regressionTypeSettings\\":{\\"linear\\":{\\"p.level\\":0.0001386194},\\"spline\\":{\\"p.level\\":0.0001386194}}}},\\"mockClonedSample2\\":{\\"auto\\":true,\\"enabled\\":true,\\"filterSettings\\":{\\"regressionType\\":\\"linear\\",\\"regressionTypeSettings\\":{\\"linear\\":{\\"p.level\\":0.0001264702},\\"spline\\":{\\"p.level\\":0.0001264702}}},\\"defaultFilterSettings\\":{\\"regressionType\\":\\"linear\\",\\"regressionTypeSettings\\":{\\"linear\\":{\\"p.level\\":0.0001264702},\\"spline\\":{\\"p.level\\":0.0001264702}}}}},\\"configureEmbedding\\":{\\"embeddingSettings\\":{\\"method\\":\\"umap\\",\\"methodSettings\\":{\\"tsne\\":{\\"perplexity\\":30,\\"learningRate\\":738.75},\\"umap\\":{\\"distanceMetric\\":\\"cosine\\",\\"minimumDistance\\":0.3}}},\\"clusteringSettings\\":{\\"method\\":\\"louvain\\",\\"methodSettings\\":{\\"louvain\\":{\\"resolution\\":0.8}}}},\\"cellSizeDistribution\\":{\\"auto\\":true,\\"enabled\\":false,\\"filterSettings\\":{\\"binStep\\":200,\\"minCellSize\\":1080},\\"mockClonedSample1\\":{\\"auto\\":true,\\"enabled\\":false,\\"filterSettings\\":{\\"binStep\\":200,\\"minCellSize\\":628},\\"defaultFilterSettings\\":{\\"binStep\\":200,\\"minCellSize\\":628}},\\"mockClonedSample2\\":{\\"auto\\":true,\\"enabled\\":false,\\"filterSettings\\":{\\"binStep\\":200,\\"minCellSize\\":630},\\"defaultFilterSettings\\":{\\"binStep\\":200,\\"minCellSize\\":630}}},\\"mitochondrialContent\\":{\\"auto\\":true,\\"enabled\\":true,\\"filterSettings\\":{\\"method\\":\\"absoluteThreshold\\",\\"methodSettings\\":{\\"absoluteThreshold\\":{\\"binStep\\":0.05,\\"maxFraction\\":0.1}}},\\"mockClonedSample1\\":{\\"auto\\":true,\\"enabled\\":true,\\"filterSettings\\":{\\"method\\":\\"absoluteThreshold\\",\\"methodSettings\\":{\\"absoluteThreshold\\":{\\"binStep\\":0.05,\\"maxFraction\\":0.1}}},\\"defaultFilterSettings\\":{\\"method\\":\\"absoluteThreshold\\",\\"methodSettings\\":{\\"absoluteThreshold\\":{\\"binStep\\":0.05,\\"maxFraction\\":0.1}}}},\\"mockClonedSample2\\":{\\"auto\\":true,\\"enabled\\":true,\\"filterSettings\\":{\\"method\\":\\"absoluteThreshold\\",\\"methodSettings\\":{\\"absoluteThreshold\\":{\\"binStep\\":0.05,\\"maxFraction\\":0.1}}},\\"defaultFilterSettings\\":{\\"method\\":\\"absoluteThreshold\\",\\"methodSettings\\":{\\"absoluteThreshold\\":{\\"binStep\\":0.05,\\"maxFraction\\":0.1}}}}}}",
      "samples_order": "[\\"mockClonedSample1\\",\\"mockClonedSample2\\"]",
    },
  ],
]
`;

exports[`experimentController createExperiment works correctly 1`] = `
Array [
  Array [
    Object {
      "description": "mockDescription",
      "id": "mockExperimentId",
      "name": "mockName",
      "pod_cpus": null,
      "pod_memory": null,
    },
  ],
]
`;
