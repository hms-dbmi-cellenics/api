// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`model/Plot copyTo works correctly: insert calls 1`] = `
Array [
  Array [
    Array [
      Object {
        "config": Object {},
        "experiment_id": "mockToExperimentId",
        "id": "mockSample1Copy-classifier-1",
        "s3_data_key": "mockS3DataKey",
      },
      Object {
        "config": Object {},
        "experiment_id": "mockToExperimentId",
        "id": "mockSample1Copy-classifier-2",
        "s3_data_key": "mockS3DataKey",
      },
      Object {
        "config": Object {},
        "experiment_id": "mockToExperimentId",
        "id": "mockSample2Copy-classifier-2",
        "s3_data_key": "mockS3DataKey",
      },
      Object {
        "config": Object {},
        "experiment_id": "mockToExperimentId",
        "id": "mockSample1Copy-cellSizeDistribution-3",
        "s3_data_key": "mockS3DataKey",
      },
      Object {
        "config": Object {},
        "experiment_id": "mockToExperimentId",
        "id": "mockSample2Copy-cellSizeDistribution-1",
        "s3_data_key": "mockS3DataKey",
      },
      Object {
        "config": Object {},
        "experiment_id": "mockToExperimentId",
        "id": "mockSample2Copy-mitochondrialContent-2",
        "s3_data_key": "mockS3DataKey",
      },
      Object {
        "config": Object {},
        "experiment_id": "mockToExperimentId",
        "id": "mockSample1Copy-mitochondrialContent-1",
        "s3_data_key": "mockS3DataKey",
      },
      Object {
        "config": Object {},
        "experiment_id": "mockToExperimentId",
        "id": "mockSample2Copy-classifier-0",
        "s3_data_key": "mockS3DataKey",
      },
      Object {
        "config": Object {},
        "experiment_id": "mockToExperimentId",
        "id": "mockSample1Copy-cellSizeDistribution-1",
        "s3_data_key": "mockS3DataKey",
      },
      Object {
        "config": Object {},
        "experiment_id": "mockToExperimentId",
        "id": "mockSample2Copy-cellSizeDistribution-3",
        "s3_data_key": "mockS3DataKey",
      },
      Object {
        "config": Object {},
        "experiment_id": "mockToExperimentId",
        "id": "mockSample2Copy-mitochondrialContent-1",
        "s3_data_key": "mockS3DataKey",
      },
      Object {
        "config": Object {},
        "experiment_id": "mockToExperimentId",
        "id": "mockSample1Copy-mitochondrialContent-0",
        "s3_data_key": "mockS3DataKey",
      },
      Object {
        "config": Object {},
        "experiment_id": "mockToExperimentId",
        "id": "mockSample1Copy-numGenesVsNumUmis-1",
        "s3_data_key": "mockS3DataKey",
      },
      Object {
        "config": Object {},
        "experiment_id": "mockToExperimentId",
        "id": "mockSample2Copy-numGenesVsNumUmis-0",
        "s3_data_key": "mockS3DataKey",
      },
      Object {
        "config": Object {},
        "experiment_id": "mockToExperimentId",
        "id": "mockSample2Copy-doubletScores-1",
        "s3_data_key": "mockS3DataKey",
      },
      Object {
        "config": Object {},
        "experiment_id": "mockToExperimentId",
        "id": "mockSample1Copy-doubletScores-0",
        "s3_data_key": "mockS3DataKey",
      },
      Object {
        "config": Object {},
        "experiment_id": "mockToExperimentId",
        "id": "mockSample2Copy-classifier-1",
        "s3_data_key": "mockS3DataKey",
      },
      Object {
        "config": Object {},
        "experiment_id": "mockToExperimentId",
        "id": "mockSample1Copy-cellSizeDistribution-0",
        "s3_data_key": "mockS3DataKey",
      },
      Object {
        "config": Object {},
        "experiment_id": "mockToExperimentId",
        "id": "mockSample2Copy-cellSizeDistribution-0",
        "s3_data_key": "mockS3DataKey",
      },
      Object {
        "config": Object {},
        "experiment_id": "mockToExperimentId",
        "id": "mockSample2Copy-mitochondrialContent-0",
        "s3_data_key": "mockS3DataKey",
      },
      Object {
        "config": Object {},
        "experiment_id": "mockToExperimentId",
        "id": "mockSample1Copy-mitochondrialContent-2",
        "s3_data_key": "mockS3DataKey",
      },
      Object {
        "config": Object {},
        "experiment_id": "mockToExperimentId",
        "id": "mockSample1Copy-numGenesVsNumUmis-0",
        "s3_data_key": "mockS3DataKey",
      },
      Object {
        "config": Object {},
        "experiment_id": "mockToExperimentId",
        "id": "mockSample2Copy-numGenesVsNumUmis-1",
        "s3_data_key": "mockS3DataKey",
      },
      Object {
        "config": Object {},
        "experiment_id": "mockToExperimentId",
        "id": "mockSample2Copy-doubletScores-0",
        "s3_data_key": "mockS3DataKey",
      },
      Object {
        "config": Object {},
        "experiment_id": "mockToExperimentId",
        "id": "mockSample1Copy-doubletScores-1",
        "s3_data_key": "mockS3DataKey",
      },
      Object {
        "config": Object {},
        "experiment_id": "mockToExperimentId",
        "id": "dataIntegration-0",
        "s3_data_key": "mockS3DataKey",
      },
      Object {
        "config": Object {},
        "experiment_id": "mockToExperimentId",
        "id": "dataIntegration-1",
        "s3_data_key": "mockS3DataKey",
      },
      Object {
        "config": Object {},
        "experiment_id": "mockToExperimentId",
        "id": "mockSample1Copy-classifier-0",
        "s3_data_key": "mockS3DataKey",
      },
    ],
  ],
]
`;

exports[`model/Plot copyTo works correctly: select calls 1`] = `
Array [
  Array [],
]
`;

exports[`model/Plot copyTo works correctly: where calls 1`] = `
Array [
  Array [
    Object {
      "experiment_id": "mockFromExperimentId",
    },
  ],
]
`;

exports[`model/Plot invalidateAttributesForMatches works correctly: andWhereLike calls 1`] = `
Array [
  Array [
    "id",
    "ViolinMain%",
  ],
]
`;

exports[`model/Plot invalidateAttributesForMatches works correctly: returning calls 1`] = `
Array [
  Array [
    Array [
      "id",
      "config",
    ],
  ],
  Array [
    Array [
      "id",
      "config",
    ],
  ],
  Array [
    Array [
      "id",
      "config",
    ],
  ],
]
`;

exports[`model/Plot invalidateAttributesForMatches works correctly: select calls 1`] = `
Array [
  Array [
    Array [
      "id",
      "config",
    ],
  ],
]
`;

exports[`model/Plot invalidateAttributesForMatches works correctly: update calls 1`] = `
Array [
  Array [
    Object {
      "config": Object {
        "title": Object {
          "anchor": "start",
          "dx": 0,
          "fontSize": 20,
          "text": "Gzma",
        },
      },
    },
  ],
  Array [
    Object {
      "config": Object {
        "title": Object {
          "anchor": "start",
          "dx": 0,
          "fontSize": 20,
          "text": "Lyz2",
        },
      },
    },
  ],
  Array [
    Object {
      "config": Object {
        "title": Object {
          "anchor": "start",
          "dx": 0,
          "fontSize": 20,
          "text": "Lyz1",
        },
      },
    },
  ],
]
`;

exports[`model/Plot invalidateAttributesForMatches works correctly: where calls 1`] = `
Array [
  Array [
    Object {
      "experiment_id": "mockExperimentId",
    },
  ],
  Array [
    Object {
      "experiment_id": "mockExperimentId",
      "id": "ViolinMain",
    },
  ],
  Array [
    Object {
      "experiment_id": "mockExperimentId",
      "id": "ViolinMain-0",
    },
  ],
  Array [
    Object {
      "experiment_id": "mockExperimentId",
      "id": "ViolinMain-1",
    },
  ],
]
`;
