// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test Pipeline Response Service updates processing config when output contains a valid config 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      Object {
        "ExpressionAttributeValues": Object {
          ":config": Object {
            "M": Object {},
          },
          ":plotDataKey": Object {
            "S": "11111111-2222-3333-4444-5555555555555",
          },
        },
        "Key": Object {
          "experimentId": Object {
            "S": "experimentid11111111111111111111",
          },
          "plotUuid": Object {
            "S": "aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee-doubletScores-0",
          },
        },
        "ReturnValues": "UPDATED_NEW",
        "TableName": "plots-tables-test",
        "UpdateExpression": "SET plotDataKey = :plotDataKey, config = if_not_exists(config, :config)",
      },
    ],
    Array [
      Object {
        "ExpressionAttributeValues": Object {
          ":updatedObject": Object {
            "M": Object {},
          },
        },
        "Key": Object {
          "experimentId": Object {
            "S": "experimentid11111111111111111111",
          },
        },
        "ReturnValues": "UPDATED_NEW",
        "TableName": "experiments-test",
        "UpdateExpression": "SET processingConfig = if_not_exists(processingConfig, :updatedObject)",
      },
    ],
    Array [
      Object {
        "ExpressionAttributeNames": Object {
          "#key1": "classifier",
        },
        "ExpressionAttributeValues": Object {
          ":val1": Object {
            "M": Object {
              "aaaaaaaa-bbbb-3333-4444-999999999999": Object {
                "M": Object {
                  "api_url": Object {
                    "S": "http://api-url-to-our-url.api-to.etc.local:3000",
                  },
                  "auth_JWT": Object {
                    "S": "Bearer Im your token man",
                  },
                  "auto": Object {
                    "BOOL": true,
                  },
                  "defaultFilterSettings": Object {
                    "M": Object {
                      "binStep": Object {
                        "N": "0.05",
                      },
                      "probabilityThreshold": Object {
                        "N": "0.7622447",
                      },
                    },
                  },
                  "enabled": Object {
                    "BOOL": true,
                  },
                  "filterSettings": Object {
                    "M": Object {
                      "binStep": Object {
                        "N": "0.05",
                      },
                      "probabilityThreshold": Object {
                        "N": "0.7622447",
                      },
                    },
                  },
                },
              },
            },
          },
        },
        "Key": Object {
          "experimentId": Object {
            "S": "experimentid11111111111111111111",
          },
        },
        "ReturnValues": "UPDATED_NEW",
        "TableName": "experiments-test",
        "UpdateExpression": "SET processingConfig.#key1 = :val1",
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": Object {
        "ExpressionAttributeValues": Object {
          ":config": Object {
            "M": Object {},
          },
          ":plotDataKey": Object {
            "S": "11111111-2222-3333-4444-5555555555555",
          },
        },
        "Key": Object {
          "experimentId": Object {
            "S": "experimentid11111111111111111111",
          },
          "plotUuid": Object {
            "S": "aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee-doubletScores-0",
          },
        },
        "ReturnValues": "UPDATED_NEW",
        "TableName": "plots-tables-test",
        "UpdateExpression": "SET plotDataKey = :plotDataKey, config = if_not_exists(config, :config)",
      },
    },
    Object {
      "type": "return",
      "value": Object {
        "ExpressionAttributeValues": Object {
          ":updatedObject": Object {
            "M": Object {},
          },
        },
        "Key": Object {
          "experimentId": Object {
            "S": "experimentid11111111111111111111",
          },
        },
        "ReturnValues": "UPDATED_NEW",
        "TableName": "experiments-test",
        "UpdateExpression": "SET processingConfig = if_not_exists(processingConfig, :updatedObject)",
      },
    },
    Object {
      "type": "return",
      "value": Object {
        "ExpressionAttributeNames": Object {
          "#key1": "classifier",
        },
        "ExpressionAttributeValues": Object {
          ":val1": Object {
            "M": Object {
              "aaaaaaaa-bbbb-3333-4444-999999999999": Object {
                "M": Object {
                  "api_url": Object {
                    "S": "http://api-url-to-our-url.api-to.etc.local:3000",
                  },
                  "auth_JWT": Object {
                    "S": "Bearer Im your token man",
                  },
                  "auto": Object {
                    "BOOL": true,
                  },
                  "defaultFilterSettings": Object {
                    "M": Object {
                      "binStep": Object {
                        "N": "0.05",
                      },
                      "probabilityThreshold": Object {
                        "N": "0.7622447",
                      },
                    },
                  },
                  "enabled": Object {
                    "BOOL": true,
                  },
                  "filterSettings": Object {
                    "M": Object {
                      "binStep": Object {
                        "N": "0.05",
                      },
                      "probabilityThreshold": Object {
                        "N": "0.7622447",
                      },
                    },
                  },
                },
              },
            },
          },
        },
        "Key": Object {
          "experimentId": Object {
            "S": "experimentid11111111111111111111",
          },
        },
        "ReturnValues": "UPDATED_NEW",
        "TableName": "experiments-test",
        "UpdateExpression": "SET processingConfig.#key1 = :val1",
      },
    },
  ],
}
`;
