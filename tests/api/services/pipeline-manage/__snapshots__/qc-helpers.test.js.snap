// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`helper functions for skeletons returns the default first step and full state machine if the config has no updates 1`] = `
Object {
  "CellSizeDistributionFilterMap": Object {
    "ItemsPath": "$.samples",
    "Iterator": Object {
      "StartAt": "CellSizeDistributionFilter",
      "States": Object {
        "CellSizeDistributionFilter": Object {
          "End": true,
          "XConstructorArgs": Object {
            "perSample": true,
            "taskName": "cellSizeDistribution",
          },
          "XStepType": "create-new-step",
        },
      },
    },
    "Next": "MitochondrialContentFilterMap",
    "ResultPath": null,
    "Type": "Map",
  },
  "ClassifierFilterMap": Object {
    "ItemsPath": "$.samples",
    "Iterator": Object {
      "StartAt": "ClassifierFilter",
      "States": Object {
        "ClassifierFilter": Object {
          "End": true,
          "XConstructorArgs": Object {
            "perSample": true,
            "taskName": "classifier",
          },
          "XStepType": "create-new-step",
        },
      },
    },
    "Next": "CellSizeDistributionFilterMap",
    "ResultPath": null,
    "Type": "Map",
  },
  "ConfigureEmbedding": Object {
    "Next": "EndOfPipeline",
    "XConstructorArgs": Object {
      "perSample": false,
      "taskName": "configureEmbedding",
    },
    "XStepType": "create-new-step",
  },
  "DataIntegration": Object {
    "Next": "ConfigureEmbedding",
    "XConstructorArgs": Object {
      "perSample": false,
      "taskName": "dataIntegration",
      "uploadCountMatrix": true,
    },
    "XStepType": "create-new-step",
  },
  "DoubletScoresFilterMap": Object {
    "ItemsPath": "$.samples",
    "Iterator": Object {
      "StartAt": "DoubletScoresFilter",
      "States": Object {
        "DoubletScoresFilter": Object {
          "End": true,
          "XConstructorArgs": Object {
            "perSample": true,
            "taskName": "doubletScores",
          },
          "XStepType": "create-new-step",
        },
      },
    },
    "Next": "DataIntegration",
    "ResultPath": null,
    "Type": "Map",
  },
  "EndOfPipeline": Object {
    "End": true,
    "Type": "Pass",
  },
  "MitochondrialContentFilterMap": Object {
    "ItemsPath": "$.samples",
    "Iterator": Object {
      "StartAt": "MitochondrialContentFilter",
      "States": Object {
        "MitochondrialContentFilter": Object {
          "End": true,
          "XConstructorArgs": Object {
            "perSample": true,
            "taskName": "mitochondrialContent",
          },
          "XStepType": "create-new-step",
        },
      },
    },
    "Next": "NumGenesVsNumUmisFilterMap",
    "ResultPath": null,
    "Type": "Map",
  },
  "NumGenesVsNumUmisFilterMap": Object {
    "ItemsPath": "$.samples",
    "Iterator": Object {
      "StartAt": "NumGenesVsNumUmisFilter",
      "States": Object {
        "NumGenesVsNumUmisFilter": Object {
          "End": true,
          "XConstructorArgs": Object {
            "perSample": true,
            "taskName": "numGenesVsNumUmis",
          },
          "XStepType": "create-new-step",
        },
      },
    },
    "Next": "DoubletScoresFilterMap",
    "ResultPath": null,
    "Type": "Map",
  },
}
`;
